{
    "term_trace": [
        {
            "Requirement": "The AUV system is developed as a Module named \"AUV_Module\".",
            "GID": "SD1",
            "Concept": "Module",
            "Concept_description": null,
            "Instance": "AUV_Module",
            "Instance_of": "Module",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
            "GID": "SD2",
            "Concept": "RoboticPlatform",
            "Concept_description": null,
            "Instance": "AUV_Platform",
            "Instance_of": "RoboticPlatform",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
            "GID": "SD2",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Sensors",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
            "GID": "SD2",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Actuators",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should contain three Controllers: \"AUV_Operator\", which uses the \"Inputs\" Interface defined by \"AUV_Module\"; \"LRE_Ctrl\" (for Last Response Engine), which uses both the \"Inputs\" and \"Outputs\" Interfaces defined by \"AUV_Module\"; and \"AUV_Autopilot\", which uses the \"Outputs\" Interface defined by \"AUV_Module\".",
            "GID": "SD3",
            "Concept": "Controller",
            "Concept_description": null,
            "Instance": "AUV_Operator",
            "Instance_of": "Controller",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should contain three Controllers: \"AUV_Operator\", which uses the \"Inputs\" Interface defined by \"AUV_Module\"; \"LRE_Ctrl\" (for Last Response Engine), which uses both the \"Inputs\" and \"Outputs\" Interfaces defined by \"AUV_Module\"; and \"AUV_Autopilot\", which uses the \"Outputs\" Interface defined by \"AUV_Module\".",
            "GID": "SD3",
            "Concept": "Controller",
            "Concept_description": null,
            "Instance": "LRE_Ctrl",
            "Instance_of": "Controller",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should contain three Controllers: \"AUV_Operator\", which uses the \"Inputs\" Interface defined by \"AUV_Module\"; \"LRE_Ctrl\" (for Last Response Engine), which uses both the \"Inputs\" and \"Outputs\" Interfaces defined by \"AUV_Module\"; and \"AUV_Autopilot\", which uses the \"Outputs\" Interface defined by \"AUV_Module\".",
            "GID": "SD3",
            "Concept": "Controller",
            "Concept_description": null,
            "Instance": "AUV_Autopilot",
            "Instance_of": "Controller",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should contain three Controllers: \"AUV_Operator\", which uses the \"Inputs\" Interface defined by \"AUV_Module\"; \"LRE_Ctrl\" (for Last Response Engine), which uses both the \"Inputs\" and \"Outputs\" Interfaces defined by \"AUV_Module\"; and \"AUV_Autopilot\", which uses the \"Outputs\" Interface defined by \"AUV_Module\".",
            "GID": "SD3",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Inputs",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should contain three Controllers: \"AUV_Operator\", which uses the \"Inputs\" Interface defined by \"AUV_Module\"; \"LRE_Ctrl\" (for Last Response Engine), which uses both the \"Inputs\" and \"Outputs\" Interfaces defined by \"AUV_Module\"; and \"AUV_Autopilot\", which uses the \"Outputs\" Interface defined by \"AUV_Module\".",
            "GID": "SD3",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Outputs",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define five Primitive Types: \"nat\" for natural numbers, \"int\" for integers, \"string\" for string values, \"boolean\" for boolean values, and \"real\" for real numbers.",
            "GID": "PT1",
            "Concept": "PrimitiveType",
            "Concept_description": null,
            "Instance": "nat",
            "Instance_of": "PrimitiveType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define five Primitive Types: \"nat\" for natural numbers, \"int\" for integers, \"string\" for string values, \"boolean\" for boolean values, and \"real\" for real numbers.",
            "GID": "PT1",
            "Concept": "PrimitiveType",
            "Concept_description": null,
            "Instance": "int",
            "Instance_of": "PrimitiveType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define five Primitive Types: \"nat\" for natural numbers, \"int\" for integers, \"string\" for string values, \"boolean\" for boolean values, and \"real\" for real numbers.",
            "GID": "PT1",
            "Concept": "PrimitiveType",
            "Concept_description": null,
            "Instance": "string",
            "Instance_of": "PrimitiveType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define five Primitive Types: \"nat\" for natural numbers, \"int\" for integers, \"string\" for string values, \"boolean\" for boolean values, and \"real\" for real numbers.",
            "GID": "PT1",
            "Concept": "PrimitiveType",
            "Concept_description": null,
            "Instance": "boolean",
            "Instance_of": "PrimitiveType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define five Primitive Types: \"nat\" for natural numbers, \"int\" for integers, \"string\" for string values, \"boolean\" for boolean values, and \"real\" for real numbers.",
            "GID": "PT1",
            "Concept": "PrimitiveType",
            "Concept_description": null,
            "Instance": "real",
            "Instance_of": "PrimitiveType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define three Composite Types: \"SVec\" (Spherical Vector), which records the values \"radial\", \"polar\", and \"azimuth\", all of type \"real\"; \"Obstacle\", which records \"ns_rel_dist\", \"ew_rel_dist\", \"depth\", and \"id\" (all of type \"real\"), as well as \"obs_hdng\" of type \"SVec\"; and \"Close\", which records \"horiz_cda\" and \"vert_cda\" (both of type \"real\") and \"id\" of type \"nat\".",
            "GID": "CT1",
            "Concept": "CompositeType",
            "Concept_description": null,
            "Instance": "SVec",
            "Instance_of": "CompositeType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define three Composite Types: \"SVec\" (Spherical Vector), which records the values \"radial\", \"polar\", and \"azimuth\", all of type \"real\"; \"Obstacle\", which records \"ns_rel_dist\", \"ew_rel_dist\", \"depth\", and \"id\" (all of type \"real\"), as well as \"obs_hdng\" of type \"SVec\"; and \"Close\", which records \"horiz_cda\" and \"vert_cda\" (both of type \"real\") and \"id\" of type \"nat\".",
            "GID": "CT1",
            "Concept": "CompositeType",
            "Concept_description": null,
            "Instance": "Obstacle",
            "Instance_of": "CompositeType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define three Composite Types: \"SVec\" (Spherical Vector), which records the values \"radial\", \"polar\", and \"azimuth\", all of type \"real\"; \"Obstacle\", which records \"ns_rel_dist\", \"ew_rel_dist\", \"depth\", and \"id\" (all of type \"real\"), as well as \"obs_hdng\" of type \"SVec\"; and \"Close\", which records \"horiz_cda\" and \"vert_cda\" (both of type \"real\") and \"id\" of type \"nat\".",
            "GID": "CT1",
            "Concept": "CompositeType",
            "Concept_description": null,
            "Instance": "Close",
            "Instance_of": "CompositeType",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define four Interfaces. The \"Sensors\" Interface contains the Values \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\"), and \"obs\" (of type \"Obstacle\"). The \"Inputs\" Interface defines six Events: \"endTask\", \"reqOCM\", \"reqMOM\", and \"reqHCM\" (all with no Parameters and no Return Value), as well as \"reqVel\" and \"reqHdng\" (each with no Parameters but returning a value of type \"real\"). The \"Outputs\" Interface defines two Events: \"advVel\" and \"advHdng\", both of which take a single Parameter of type \"real\" and have no Return Value. The \"Actuators\" Interface should remain empty at this point.",
            "GID": "Interface1",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Sensors",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define four Interfaces. The \"Sensors\" Interface contains the Values \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\"), and \"obs\" (of type \"Obstacle\"). The \"Inputs\" Interface defines six Events: \"endTask\", \"reqOCM\", \"reqMOM\", and \"reqHCM\" (all with no Parameters and no Return Value), as well as \"reqVel\" and \"reqHdng\" (each with no Parameters but returning a value of type \"real\"). The \"Outputs\" Interface defines two Events: \"advVel\" and \"advHdng\", both of which take a single Parameter of type \"real\" and have no Return Value. The \"Actuators\" Interface should remain empty at this point.",
            "GID": "Interface1",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Inputs",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define four Interfaces. The \"Sensors\" Interface contains the Values \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\"), and \"obs\" (of type \"Obstacle\"). The \"Inputs\" Interface defines six Events: \"endTask\", \"reqOCM\", \"reqMOM\", and \"reqHCM\" (all with no Parameters and no Return Value), as well as \"reqVel\" and \"reqHdng\" (each with no Parameters but returning a value of type \"real\"). The \"Outputs\" Interface defines two Events: \"advVel\" and \"advHdng\", both of which take a single Parameter of type \"real\" and have no Return Value. The \"Actuators\" Interface should remain empty at this point.",
            "GID": "Interface1",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Outputs",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" should define four Interfaces. The \"Sensors\" Interface contains the Values \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\"), and \"obs\" (of type \"Obstacle\"). The \"Inputs\" Interface defines six Events: \"endTask\", \"reqOCM\", \"reqMOM\", and \"reqHCM\" (all with no Parameters and no Return Value), as well as \"reqVel\" and \"reqHdng\" (each with no Parameters but returning a value of type \"real\"). The \"Outputs\" Interface defines two Events: \"advVel\" and \"advHdng\", both of which take a single Parameter of type \"real\" and have no Return Value. The \"Actuators\" Interface should remain empty at this point.",
            "GID": "Interface1",
            "Concept": "Interface",
            "Concept_description": null,
            "Instance": "Actuators",
            "Instance_of": "Interface",
            "Instance_description": null,
            "Requirement_kind": "Non-Functional",
            "Non-Requirement_type": "architecture"
        },
        {
            "Requirement": "The \"AUV_Module\" shall define three Functions: \"odist\", \"hdist\", and \"vdist\", each taking an \"Obstacle\" as input and returning a \"real\" value representing the overall distance, horizontal distance, and vertical distance from the AUV to the Obstacle, respectively.",
            "GID": "Platform-F1",
            "Concept": "Function",
            "Concept_description": null,
            "Instance": "odist",
            "Instance_of": "Function",
            "Instance_description": null,
            "Requirement_kind": "Functional",
            "Non-Requirement_type": null
        },
        {
            "Requirement": "The \"AUV_Module\" shall define three Functions: \"odist\", \"hdist\", and \"vdist\", each taking an \"Obstacle\" as input and returning a \"real\" value representing the overall distance, horizontal distance, and vertical distance from the AUV to the Obstacle, respectively.",
            "GID": "Platform-F1",
            "Concept": "Function",
            "Concept_description": null,
            "Instance": "hdist",
            "Instance_of": "Function",
            "Instance_description": null,
            "Requirement_kind": "Functional",
            "Non-Requirement_type": null
        },
        {
            "Requirement": "The \"AUV_Module\" shall define three Functions: \"odist\", \"hdist\", and \"vdist\", each taking an \"Obstacle\" as input and returning a \"real\" value representing the overall distance, horizontal distance, and vertical distance from the AUV to the Obstacle, respectively.",
            "GID": "Platform-F1",
            "Concept": "Function",
            "Concept_description": null,
            "Instance": "vdist",
            "Instance_of": "Function",
            "Instance_description": null,
            "Requirement_kind": "Functional",
            "Non-Requirement_type": null
        }
    ]
}