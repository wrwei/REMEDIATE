[
    {
        "Requirement": "The AUV system is developed as a Module named \"AUV_Module\".",
        "GID": "SD1",
        "Concept": "Module",
        "Concept_description": "A component of the AUV system that encapsulates functionality.",
        "Instance": "AUV_Module",
        "Instance_of": "Module",
        "Instance_description": "The specific module developed for the AUV system.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
        "GID": "SD2",
        "Concept": "RoboticPlatform",
        "Concept_description": "A platform within the AUV module that handles robotic operations.",
        "Instance": "AUV_Platform",
        "Instance_of": "RoboticPlatform",
        "Instance_description": "The specific robotic platform within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
        "GID": "SD2",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Sensors",
        "Instance_of": "Interface",
        "Instance_description": "An interface for sensor data within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
        "GID": "SD2",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Actuators",
        "Instance_of": "Interface",
        "Instance_description": "An interface for actuator operations within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Operator\", it should use the Interface \"Inputs\" (defined by \"AUV_Module\").",
        "GID": "SD3",
        "Concept": "Controller",
        "Concept_description": "A component responsible for controlling operations.",
        "Instance": "AUV_Operator",
        "Instance_of": "Controller",
        "Instance_description": "The controller for operating the AUV.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Operator\", it should use the Interface \"Inputs\" (defined by \"AUV_Module\").",
        "GID": "SD3",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Inputs",
        "Instance_of": "Interface",
        "Instance_description": "An interface for input data within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"LRE_Ctrl\" (for Last Response Engine), it should use the Interfaces \"Inputs\" and \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD4",
        "Concept": "Controller",
        "Concept_description": "A component responsible for controlling operations.",
        "Instance": "LRE_Ctrl",
        "Instance_of": "Controller",
        "Instance_description": "The last response engine controller within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"LRE_Ctrl\" (for Last Response Engine), it should use the Interfaces \"Inputs\" and \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD4",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Outputs",
        "Instance_of": "Interface",
        "Instance_description": "An interface for output data within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Autopilot\", it should use the Interface \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD5",
        "Concept": "Controller",
        "Concept_description": "A component responsible for controlling operations.",
        "Instance": "AUV_Autopilot",
        "Instance_of": "Controller",
        "Instance_description": "The autopilot controller for the AUV.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Autopilot\", it should use the Interface \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD5",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Outputs",
        "Instance_of": "Interface",
        "Instance_description": "An interface for output data within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"nat\" (for natural numbers).",
        "GID": "PT1",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type with no internal structure.",
        "Instance": "nat",
        "Instance_of": "PrimitiveType",
        "Instance_description": "A primitive type for natural numbers.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"int\" (for integers).",
        "GID": "PT2",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type with no internal structure.",
        "Instance": "int",
        "Instance_of": "PrimitiveType",
        "Instance_description": "A primitive type for integers.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"string\" (for string values).",
        "GID": "PT3",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type with no internal structure.",
        "Instance": "string",
        "Instance_of": "PrimitiveType",
        "Instance_description": "A primitive type for string values.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"boolean\" (for boolean values).",
        "GID": "PT4",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type with no internal structure.",
        "Instance": "boolean",
        "Instance_of": "PrimitiveType",
        "Instance_description": "A primitive type for boolean values.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"real\" (for real numbers).",
        "GID": "PT5",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type with no internal structure.",
        "Instance": "real",
        "Instance_of": "PrimitiveType",
        "Instance_description": "A primitive type for real numbers.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"SVec\" (Spherical Vector), to record values such as \"radial\" (of type \"real\"), \"polar\" (of type \"real\"), and \"azimuth\" (of type \"real\").",
        "GID": "CT1",
        "Concept": "CompositeType",
        "Concept_description": "A data type composed of multiple primitive types.",
        "Instance": "SVec",
        "Instance_of": "CompositeType",
        "Instance_description": "A composite type representing a spherical vector.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Obstacle\", to record the following values: \"ns_rel_dist\" (of type \"real\"), \"ew_rel_dist\" (of type real), \"depth\" (of type \"real\"), \"id\" (of type \"real\"), \"obs_hdng\" (of type \"SVec\").",
        "GID": "CT2",
        "Concept": "CompositeType",
        "Concept_description": "A data type composed of multiple primitive types.",
        "Instance": "Obstacle",
        "Instance_of": "CompositeType",
        "Instance_description": "A composite type representing an obstacle with various attributes.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Sensors\", which contains the following Values: \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\") and \"obs\" (of type \"Obstacle\").",
        "GID": "Interface1",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Sensors",
        "Instance_of": "Interface",
        "Instance_description": "An interface for sensor data within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Intpus\", which defines the following Events: \"endTask\" (with no Parameters and no Return Value), \"reqOCM\" (with no Parameters and no Return Value), \"reqMOM\" (with no Parameters and no Return Value), \"reqHCM\" (with no Parameters and no Return Value), \"reqVel\" (with no Parameters, but with a Return Value of type \"real\"), and \"reqHdng\" (with no Parameters, but with a Return Value of type \"real\").",
        "GID": "Interface2",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Intpus",
        "Instance_of": "Interface",
        "Instance_description": "An interface for input events within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Intpus\", which defines the following Events: \"endTask\" (with no Parameters and no Return Value), \"reqOCM\" (with no Parameters and no Return Value), \"reqMOM\" (with no Parameters and no Return Value), \"reqHCM\" (with no Parameters and no Return Value), \"reqVel\" (with no Parameters, but with a Return Value of type \"real\"), and \"reqHdng\" (with no Parameters, but with a Return Value of type \"real\").",
        "GID": "Interface2",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "endTask",
        "Instance_of": "Event",
        "Instance_description": "An event with no parameters and no return value.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Intpus\", which defines the following Events: \"endTask\" (with no Parameters and no Return Value), \"reqOCM\" (with no Parameters and no Return Value), \"reqMOM\" (with no Parameters and no Return Value), \"reqHCM\" (with no Parameters and no Return Value), \"reqVel\" (with no Parameters, but with a Return Value of type \"real\"), and \"reqHdng\" (with no Parameters, but with a Return Value of type \"real\").",
        "GID": "Interface2",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "reqOCM",
        "Instance_of": "Event",
        "Instance_description": "An event with no parameters and no return value.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Intpus\", which defines the following Events: \"endTask\" (with no Parameters and no Return Value), \"reqOCM\" (with no Parameters and no Return Value), \"reqMOM\" (with no Parameters and no Return Value), \"reqHCM\" (with no Parameters and no Return Value), \"reqVel\" (with no Parameters, but with a Return Value of type \"real\"), and \"reqHdng\" (with no Parameters, but with a Return Value of type \"real\").",
        "GID": "Interface2",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "reqMOM",
        "Instance_of": "Event",
        "Instance_description": "An event with no parameters and no return value.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Intpus\", which defines the following Events: \"endTask\" (with no Parameters and no Return Value), \"reqOCM\" (with no Parameters and no Return Value), \"reqMOM\" (with no Parameters and no Return Value), \"reqHCM\" (with no Parameters and no Return Value), \"reqVel\" (with no Parameters, but with a Return Value of type \"real\"), and \"reqHdng\" (with no Parameters, but with a Return Value of type \"real\").",
        "GID": "Interface2",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "reqHCM",
        "Instance_of": "Event",
        "Instance_description": "An event with no parameters and no return value.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Intpus\", which defines the following Events: \"endTask\" (with no Parameters and no Return Value), \"reqOCM\" (with no Parameters and no Return Value), \"reqMOM\" (with no Parameters and no Return Value), \"reqHCM\" (with no Parameters and no Return Value), \"reqVel\" (with no Parameters, but with a Return Value of type \"real\"), and \"reqHdng\" (with no Parameters, but with a Return Value of type \"real\").",
        "GID": "Interface2",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "reqVel",
        "Instance_of": "Event",
        "Instance_description": "An event with no parameters and a return value of type real.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Intpus\", which defines the following Events: \"endTask\" (with no Parameters and no Return Value), \"reqOCM\" (with no Parameters and no Return Value), \"reqMOM\" (with no Parameters and no Return Value), \"reqHCM\" (with no Parameters and no Return Value), \"reqVel\" (with no Parameters, but with a Return Value of type \"real\"), and \"reqHdng\" (with no Parameters, but with a Return Value of type \"real\").",
        "GID": "Interface2",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "reqHdng",
        "Instance_of": "Event",
        "Instance_description": "An event with no parameters and a return value of type real.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Outputs\", which defines the following Events: \"advVel\" (which takes one Parameters of type \"real\", and no Return Value) and \"advHdng\" (which takes one Parameters of type \"real\", and no Return Value).",
        "GID": "Interface3",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Outputs",
        "Instance_of": "Interface",
        "Instance_description": "An interface for output events within the AUV module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Outputs\", which defines the following Events: \"advVel\" (which takes one Parameters of type \"real\", and no Return Value) and \"advHdng\" (which takes one Parameters of type \"real\", and no Return Value).",
        "GID": "Interface3",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "advVel",
        "Instance_of": "Event",
        "Instance_description": "An event that takes one parameter of type real and has no return value.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Outputs\", which defines the following Events: \"advVel\" (which takes one Parameters of type \"real\", and no Return Value) and \"advHdng\" (which takes one Parameters of type \"real\", and no Return Value).",
        "GID": "Interface3",
        "Concept": "Event",
        "Concept_description": "An occurrence or action that is detected by the system.",
        "Instance": "advHdng",
        "Instance_of": "Event",
        "Instance_description": "An event that takes one parameter of type real and has no return value.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Actuators\", which should remain empty at this point.",
        "GID": "Interface4",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Actuators",
        "Instance_of": "Interface",
        "Instance_description": "An interface for actuator operations within the AUV module that is currently empty.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Close\", to record the following values: \"horiz_cda\" (of type \"real\"), \"vert_cda\" (of type \"real\"), and \"id\" (of type \"nat\").",
        "GID": "CF3",
        "Concept": "CompositeType",
        "Concept_description": "A data type composed of multiple primitive types.",
        "Instance": "Close",
        "Instance_of": "CompositeType",
        "Instance_description": "A composite type representing close proximity data.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" shall define a Function named \"odist\", which takes an \"Obstacle\" as input, that returns the distance from the AUV to the Obstacle (as \"real\").",
        "GID": "Platform-F1",
        "Concept": "Function",
        "Concept_description": "A block of code that performs a specific task.",
        "Instance": "odist",
        "Instance_of": "Function",
        "Instance_description": "A function that calculates the distance from the AUV to an obstacle.",
        "Requirement_kind": "Functional",
        "Non-Requirement_type": null
    },
    {
        "Requirement": "The \"AUV_Module\" shall define a Function named \"hdist\", which takes an \"Obstacle\" as input, that returns the horizontal distance from the AUV to the Obstacle (as \"real\").",
        "GID": "Platform-F2",
        "Concept": "Function",
        "Concept_description": "A block of code that performs a specific task.",
        "Instance": "hdist",
        "Instance_of": "Function",
        "Instance_description": "A function that calculates the horizontal distance from the AUV to an obstacle.",
        "Requirement_kind": "Functional",
        "Non-Requirement_type": null
    },
    {
        "Requirement": "The \"AUV_Module\" shall define a Function named \"vdist\", which takes an \"Obstacle\" as input, that returns the vertical distance from the AUV to the Obstacle (as \"real\").",
        "GID": "Platform-F3",
        "Concept": "Function",
        "Concept_description": "A block of code that performs a specific task.",
        "Instance": "vdist",
        "Instance_of": "Function",
        "Instance_description": "A function that calculates the vertical distance from the AUV to an obstacle.",
        "Requirement_kind": "Functional",
        "Non-Requirement_type": null
    }
]