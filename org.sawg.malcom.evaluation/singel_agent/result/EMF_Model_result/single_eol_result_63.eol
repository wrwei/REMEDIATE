var auv_module = new M!Module;
auv_module.name = "AUV_Module";

var auv_platform = new M!RoboticPlatform;
auv_platform.name = "AUV_Platform";
auv_module.robotic_platforms.add(auv_platform);

var auv_operator = new M!Controller;
auv_operator.name = "AUV_Operator";
auv_module.controllers.add(auv_operator);

var lre_ctrl = new M!Controller;
lre_ctrl.name = "LRE_Ctrl";
auv_module.controllers.add(lre_ctrl);

var auv_autopilot = new M!Controller;
auv_autopilot.name = "AUV_Autopilot";
auv_module.controllers.add(auv_autopilot);

var nat = new M!Nat;
nat.name = "nat";
auv_module.primitiveTypes.add(nat);

var intType = new M!Int;
intType.name = "int";
auv_module.primitiveTypes.add(intType);

var stringType = new M!String;
stringType.name = "string";
auv_module.primitiveTypes.add(stringType);

var booleanType = new M!Boolean;
booleanType.name = "boolean";
auv_module.primitiveTypes.add(booleanType);

var realType = new M!Real;
realType.name = "real";
auv_module.primitiveTypes.add(realType);

var svec = new M!SVec;
svec.name = "SVec";
auv_module.compositeTypes.add(svec);

var radial = new M!Value;
radial.name = "radial";
radial.type = realType;
svec.values.add(radial);

var polar = new M!Value;
polar.name = "polar";
polar.type = realType;
svec.values.add(polar);

var azimuth = new M!Value;
azimuth.name = "azimuth";
azimuth.type = realType;
svec.values.add(azimuth);

var obstacle = new M!Obstacle;
obstacle.name = "Obstacle";
auv_module.compositeTypes.add(obstacle);

var ns_rel_dist = new M!Value;
ns_rel_dist.name = "ns_rel_dist";
ns_rel_dist.type = realType;
obstacle.values.add(ns_rel_dist);

var ew_rel_dist = new M!Value;
ew_rel_dist.name = "ew_rel_dist";
ew_rel_dist.type = realType;
obstacle.values.add(ew_rel_dist);

var depthValue = new M!Value;
depthValue.name = "depth";
depthValue.type = realType;
obstacle.values.add(depthValue);

var idValue = new M!Value;
idValue.name = "id";
idValue.type = realType;
obstacle.values.add(idValue);

var obs_hdng = new M!Value;
obs_hdng.name = "obs_hdng";
obs_hdng.type = svec;
obstacle.values.add(obs_hdng);

var sensors = new M!Interface;
sensors.name = "Sensors";
auv_module.interfaces.add(sensors);

var depthSensor = new M!Value;
depthSensor.name = "depth";
depthSensor.type = realType;
sensors.values.add(depthSensor);

var hdng = new M!Value;
hdng.name = "hdng";
hdng.type = svec;
sensors.values.add(hdng);

var obs = new M!Value;
obs.name = "obs";
obs.type = obstacle;
sensors.values.add(obs);

var inputs = new M!Interface;
inputs.name = "Inputs";
auv_module.interfaces.add(inputs);

var endTask = new M!Event;
endTask.name = "endTask";
inputs.events.add(endTask);

var reqOCM = new M!Event;
reqOCM.name = "reqOCM";
inputs.events.add(reqOCM);

var reqMOM = new M!Event;
reqMOM.name = "reqMOM";
inputs.events.add(reqMOM);

var reqHCM = new M!Event;
reqHCM.name = "reqHCM";
inputs.events.add(reqHCM);

var reqVel = new M!Event;
reqVel.name = "reqVel";
reqVel.returnType = realType;
inputs.events.add(reqVel);

var reqHdng = new M!Event;
reqHdng.name = "reqHdng";
reqHdng.returnType = realType;
inputs.events.add(reqHdng);

var outputs = new M!Interface;
outputs.name = "Outputs";
auv_module.interfaces.add(outputs);

var advVel = new M!Event;
advVel.name = "advVel";
outputs.events.add(advVel);

var advVelParam = new M!Parameter;
advVelParam.name = "advVelParam";
advVelParam.type = realType;
advVel.parameters.add(advVelParam);

var advHdng = new M!Event;
advHdng.name = "advHdng";
outputs.events.add(advHdng);

var advHdngParam = new M!Parameter;
advHdngParam.name = "advHdngParam";
advHdngParam.type = realType;
advHdng.parameters.add(advHdngParam);

var actuators = new M!Interface;
actuators.name = "Actuators";
auv_module.interfaces.add(actuators);

var close = new M!Close;
close.name = "Close";
auv_module.compositeTypes.add(close);

var horiz_cda = new M!Value;
horiz_cda.name = "horiz_cda";
horiz_cda.type = realType;
close.values.add(horiz_cda);

var vert_cda = new M!Value;
vert_cda.name = "vert_cda";
vert_cda.type = realType;
close.values.add(vert_cda);

var closeId = new M!Value;
closeId.name = "id";
closeId.type = nat;
close.values.add(closeId);