abstract class NamedElement {
    attr String name;
}

class Module extends NamedElement {
    val RoboticPlatform[*] robotic_platforms;
    val Controller[*] controllers;
    val PrimitiveType[*] primitive_types;
    val CompositeType[*] composite_types;
    val Interface[*] interfaces;
}

class RoboticPlatform extends NamedElement {
    ref Interface[*] interfaces;
}

class Controller extends NamedElement {
    ref Interface[*] interfaces;
}

class PrimitiveType extends NamedElement {
}

class CompositeType extends NamedElement {
    val Value[*] values;
}

class Interface extends NamedElement {
    val Value[*] values;
    val Event[*] events;
}

class Value extends NamedElement {
    attr PrimitiveType type;
}

class Event extends NamedElement {
    attr PrimitiveType returnType;
    val Parameter[*] parameters;
}

class Parameter extends NamedElement {
    attr PrimitiveType type;
}

class SVec extends CompositeType {
    val Value radial;
    val Value polar;
    val Value azimuth;
}

class Obstacle extends CompositeType {
    val Value ns_rel_dist;
    val Value ew_rel_dist;
    val Value depth;
    val Value id;
    val SVec obs_hdng;
}

class Close extends CompositeType {
    val Value horiz_cda;
    val Value vert_cda;
    val Value id;
}

class Sensors extends Interface {
    val Value depth;
    val SVec hdng;
    val Obstacle obs;
}

class Inputs extends Interface {
    val Event endTask;
    val Event reqOCM;
    val Event reqMOM;
    val Event reqHCM;
    val Event reqVel;
    val Event reqHdng;
}

class Outputs extends Interface {
    val Event advVel;
    val Event advHdng;
}

class Actuators extends Interface {
}

op real odist(Obstacle obstacle);
op real hdist(Obstacle obstacle);
op real vdist(Obstacle obstacle);