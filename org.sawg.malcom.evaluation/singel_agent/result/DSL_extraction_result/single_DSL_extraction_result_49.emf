abstract class NamedElement {
    attr String name;
}

class Module extends NamedElement {
    val RoboticPlatform[*] robotic_platforms;
    val Controller[*] controllers;
    val PrimitiveType[*] primitive_types;
    val CompositeType[*] composite_types;
    val Interface[*] interfaces;
    op real odist(Obstacle obstacle);
    op real hdist(Obstacle obstacle);
    op real vdist(Obstacle obstacle);
}

class RoboticPlatform extends NamedElement {
    ref Interface[*] interfaces;
}

class Controller extends NamedElement {
    ref Interface[*] interfaces;
}

class PrimitiveType extends NamedElement {
}

class CompositeType extends NamedElement {
    val Value[*] values;
}

class Value extends NamedElement {
    attr PrimitiveType type;
}

class Interface extends NamedElement {
    val Value[*] values;
    val Event[*] events;
}

class Event extends NamedElement {
    attr PrimitiveType returnType;
    val Parameter[*] parameters;
}

class Parameter extends NamedElement {
    attr PrimitiveType type;
}

class SVec extends CompositeType {
    attr real radial;
    attr real polar;
    attr real azimuth;
}

class Obstacle extends CompositeType {
    attr real ns_rel_dist;
    attr real ew_rel_dist;
    attr real depth;
    attr real id;
    val SVec obs_hdng;
}

class Close extends CompositeType {
    attr real horiz_cda;
    attr real vert_cda;
    attr nat id;
}