[
    {
        "Requirement": "The AUV system is developed as a Module named \"AUV_Module\".",
        "GID": "SD1",
        "Concept": "Module",
        "Concept_description": "A self-contained unit of the AUV system.",
        "Instance": "AUV_Module",
        "Instance_of": "Module",
        "Instance_description": "The main module of the AUV system.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
        "GID": "SD2",
        "Concept": "RoboticPlatform",
        "Concept_description": "A platform that supports robotic operations.",
        "Instance": "AUV_Platform",
        "Instance_of": "RoboticPlatform",
        "Instance_description": "The robotic platform within the AUV_Module.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
        "GID": "SD2",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Sensors",
        "Instance_of": "Interface",
        "Instance_description": "Interface for sensor data.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Robotic Platform named \"AUV_Platform\", it should use the Interfaces \"Sensors\" and \"Actuators\" (defined by \"AUV_Module\").",
        "GID": "SD2",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Actuators",
        "Instance_of": "Interface",
        "Instance_description": "Interface for actuator control.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Operator\", it should use the Interface \"Inputs\" (defined by \"AUV_Module\").",
        "GID": "SD3",
        "Concept": "Controller",
        "Concept_description": "A component that manages the operations of other components.",
        "Instance": "AUV_Operator",
        "Instance_of": "Controller",
        "Instance_description": "The controller for operating the AUV.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Operator\", it should use the Interface \"Inputs\" (defined by \"AUV_Module\").",
        "GID": "SD3",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Inputs",
        "Instance_of": "Interface",
        "Instance_description": "Interface for input data.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"LRE_Ctrl\" (for Last Response Engine), it should use the Interfaces \"Inputs\" and \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD4",
        "Concept": "Controller",
        "Concept_description": "A component that manages the operations of other components.",
        "Instance": "LRE_Ctrl",
        "Instance_of": "Controller",
        "Instance_description": "The controller for the Last Response Engine.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"LRE_Ctrl\" (for Last Response Engine), it should use the Interfaces \"Inputs\" and \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD4",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Inputs",
        "Instance_of": "Interface",
        "Instance_description": "Interface for input data.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"LRE_Ctrl\" (for Last Response Engine), it should use the Interfaces \"Inputs\" and \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD4",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Outputs",
        "Instance_of": "Interface",
        "Instance_description": "Interface for output data.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Autopilot\", it should use the Interface \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD5",
        "Concept": "Controller",
        "Concept_description": "A component that manages the operations of other components.",
        "Instance": "AUV_Autopilot",
        "Instance_of": "Controller",
        "Instance_description": "The autopilot controller for the AUV.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "\"AUV_Module\" should contain a Controller named \"AUV_Autopilot\", it should use the Interface \"Outputs\" (defined by \"AUV_Module\").",
        "GID": "SD5",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Outputs",
        "Instance_of": "Interface",
        "Instance_description": "Interface for output data.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"nat\" (for natural numbers).",
        "GID": "PT1",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type provided by the system.",
        "Instance": "nat",
        "Instance_of": "PrimitiveType",
        "Instance_description": "Primitive type for natural numbers.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"int\" (for integers).",
        "GID": "PT2",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type provided by the system.",
        "Instance": "int",
        "Instance_of": "PrimitiveType",
        "Instance_description": "Primitive type for integers.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"string\" (for string values).",
        "GID": "PT3",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type provided by the system.",
        "Instance": "string",
        "Instance_of": "PrimitiveType",
        "Instance_description": "Primitive type for string values.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"boolean\" (for boolean values).",
        "GID": "PT4",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type provided by the system.",
        "Instance": "boolean",
        "Instance_of": "PrimitiveType",
        "Instance_description": "Primitive type for boolean values.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Primitive Type named \"real\" (for real numbers).",
        "GID": "PT5",
        "Concept": "PrimitiveType",
        "Concept_description": "A basic data type provided by the system.",
        "Instance": "real",
        "Instance_of": "PrimitiveType",
        "Instance_description": "Primitive type for real numbers.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"SVec\" (Spherical Vector), to record values such as \"radial\" (of type \"real\"), \"polar\" (of type \"real\"), and \"azimuth\" (of type \"real\").",
        "GID": "CT1",
        "Concept": "CompositeType",
        "Concept_description": "A complex data type composed of multiple primitive types.",
        "Instance": "SVec",
        "Instance_of": "CompositeType",
        "Instance_description": "Composite type for spherical vectors.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"SVec\" (Spherical Vector), to record values such as \"radial\" (of type \"real\"), \"polar\" (of type \"real\"), and \"azimuth\" (of type \"real\").",
        "GID": "CT1",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "radial",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within SVec.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"SVec\" (Spherical Vector), to record values such as \"radial\" (of type \"real\"), \"polar\" (of type \"real\"), and \"azimuth\" (of type \"real\").",
        "GID": "CT1",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "polar",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within SVec.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"SVec\" (Spherical Vector), to record values such as \"radial\" (of type \"real\"), \"polar\" (of type \"real\"), and \"azimuth\" (of type \"real\").",
        "GID": "CT1",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "azimuth",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within SVec.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Obstacle\", to record the following values: \"ns_rel_dist\" (of type \"real\"), \"ew_rel_dist\" (of type real), \"depth\" (of type \"real\"), \"id\" (of type \"real\"), \"obs_hdng\" (of type \"SVec\").",
        "GID": "CT2",
        "Concept": "CompositeType",
        "Concept_description": "A complex data type composed of multiple primitive types.",
        "Instance": "Obstacle",
        "Instance_of": "CompositeType",
        "Instance_description": "Composite type for obstacles.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Obstacle\", to record the following values: \"ns_rel_dist\" (of type \"real\"), \"ew_rel_dist\" (of type real), \"depth\" (of type \"real\"), \"id\" (of type \"real\"), \"obs_hdng\" (of type \"SVec\").",
        "GID": "CT2",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "ns_rel_dist",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within Obstacle.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Obstacle\", to record the following values: \"ns_rel_dist\" (of type \"real\"), \"ew_rel_dist\" (of type real), \"depth\" (of type \"real\"), \"id\" (of type \"real\"), \"obs_hdng\" (of type \"SVec\").",
        "GID": "CT2",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "ew_rel_dist",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within Obstacle.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Obstacle\", to record the following values: \"ns_rel_dist\" (of type \"real\"), \"ew_rel_dist\" (of type real), \"depth\" (of type \"real\"), \"id\" (of type \"real\"), \"obs_hdng\" (of type \"SVec\").",
        "GID": "CT2",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "depth",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within Obstacle.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Obstacle\", to record the following values: \"ns_rel_dist\" (of type \"real\"), \"ew_rel_dist\" (of type real), \"depth\" (of type \"real\"), \"id\" (of type \"real\"), \"obs_hdng\" (of type \"SVec\").",
        "GID": "CT2",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "id",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within Obstacle.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define a Composite Type named \"Obstacle\", to record the following values: \"ns_rel_dist\" (of type \"real\"), \"ew_rel_dist\" (of type real), \"depth\" (of type \"real\"), \"id\" (of type \"real\"), \"obs_hdng\" (of type \"SVec\").",
        "GID": "CT2",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "obs_hdng",
        "Instance_of": "Value",
        "Instance_description": "Value of type SVec within Obstacle.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Sensors\", which contains the following Values: \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\") and \"obs\" (of type \"Obstacle\").",
        "GID": "Interface1",
        "Concept": "Interface",
        "Concept_description": "A point of interaction between components.",
        "Instance": "Sensors",
        "Instance_of": "Interface",
        "Instance_description": "Interface for sensor data.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Sensors\", which contains the following Values: \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\") and \"obs\" (of type \"Obstacle\").",
        "GID": "Interface1",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "depth",
        "Instance_of": "Value",
        "Instance_description": "Value of type real within Sensors.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Sensors\", which contains the following Values: \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\") and \"obs\" (of type \"Obstacle\").",
        "GID": "Interface1",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "hdng",
        "Instance_of": "Value",
        "Instance_description": "Value of type SVec within Sensors.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    },
    {
        "Requirement": "The \"AUV_Module\" should define an Interface named \"Sensors\", which contains the following Values: \"depth\" (of type \"real\"), \"hdng\" (of type \"SVec\") and \"obs\" (of type \"Obstacle\").",
        "GID": "Interface1",
        "Concept": "Value",
        "Concept_description": "A specific data point within a composite type.",
        "Instance": "obs",
        "Instance_of": "Value",
        "Instance_description": "Value of type Obstacle within Sensors.",
        "Requirement_kind": "Non-Functional",
        "Non-Requirement_type": "architecture"
    }
]
   