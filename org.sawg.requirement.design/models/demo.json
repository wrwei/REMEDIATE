{
    "req": [
        {
            "Sentence": "The external email system is to provide a messaging service from Mashbot to the Mashbot users.",
            "ID": "1.1",
            "Expression": "provide a messaging service from Mashbot to the Mashbot users.",
            "Term": "external email system",
            "Category": "system",
            "Requirement": "Functional Requirement{name: FR; id: 1.1; description: The external email system is to provide a messaging service from Mashbot to the Mashbot users.; priority: 2; function: Provide messaging services to communicate from Mashbot to its users.; inputs: Email content generated by Mashbot.; outputs: Emails sent to user email accounts.; source: Mashbot system.; destination: User email accounts.; action: Generate and send emails to users based on system events or notifications.; requires: Configured SMTP server settings; Valid user email addresses.; pre condition: Email system must be configured correctly; User email addresses must be available and valid.; post condition: Emails are delivered to users' email accounts; Users receive notifications or messages as intended.; side effects: Potential delays in email delivery due to network issues; Possible bounce backs if email addresses are invalid.}."
        },
        {
            "Sentence": "The external email system is to provide a messaging service from Mashbot to the Mashbot users.",
            "ID": "1.1",
            "Expression": "provide a messaging service from Mashbot to the Mashbot users.",
            "Term": "external email system",
            "Category": "system",
            "Requirement": "Functional Requirement{name: FR; id: 1.1; description: The external email system is to provide a messaging service from Mashbot to the Mashbot users.; priority: 2; function: Provide messaging services to communicate from Mashbot to its users.; inputs: Email content generated by Mashbot.; outputs: Emails sent to user email accounts.; source: Mashbot system.; destination: User email accounts.; action: Generate and send emails to users based on system events or notifications.; requires: Configured SMTP server settings; Valid user email addresses.; pre condition: Email system must be configured correctly; User email addresses must be available and valid.; post condition: Emails are delivered to users' email accounts; Users receive notifications or messages as intended.; side effects: Potential delays in email delivery due to network issues; Possible bounce backs if email addresses are invalid.}."
        },
        {
            "Sentence": "The format uses SMTP protocol.",
            "ID": "1.2",
            "Expression": "uses SMTP protocol.",
            "Term": null,
            "Category": "format",
            "Requirement": "Non-Functional Requirement{name: NFR; id: 1.2; description: The format uses SMTP protocol. The actual messages are provided by Mashbot. ; priority: 2; types: security, operational}."
        },
        {
            "Sentence": "Contributors may create new content, import existing content into the system, edit content, and delete it.",
            "ID": "2.1",
            "Expression": "create new content, import existing content into the system, edit content, and delete it.",
            "Term": null,
            "Category": "contributors",
            "Requirement": "Functional Requirement{name: FR; id: 2.1; description: Contributors may create new content, import existing content into the system, edit content, and delete it. ; priority: 3; function: Contributors may create new content, import existing content into the system, edit content, and delete it.; inputs: New content data;Existing content data to be imported;Edited content data.; outputs: Confirmation messages for content creation, import, edit, and deletion;Error messages in case of failure.; source: Contributors initiating content actions.; destination: Mashbot's content management system/database.; action: Create: Adds new content to the system;Import: Brings in existing content from external sources;Edit: Modifies existing content within the system;Delete: Removes content from the system.; requires: Valid user credentials with contributor role;Appropriate permissions for content actions.; pre condition: User must be logged in and authenticated;User must have contributor role.; post condition: New content is added to the system;Existing content is successfully imported;Content edits are saved;Content is deleted from the system.; side effects: Potential conflicts with simultaneous content modifications; System load increase due to multiple content actions}."
        },
        {
            "Sentence": "Approvers can approve actions performed by contributors",
            "ID": "2.2",
            "Expression": "approve actions performed by contributors",
            "Term": null,
            "Category": "approvers",
            "Requirement": "Functional Requirement{name: FR; id: 2.2; description:  Approvers can approve actions performed by contributors; priority: 3; function: Approvers can approve actions performed by contributors.; inputs: Actions submitted by contributors (create, import, edit, delete); outputs: Approval confirmation messages; Rejection messages with reasons.; source: Approvers; destination: Mashbot's content management and approval system; action: Approve: Validates and approves the content actions submitted by contributors; Reject: Denies the content actions with feedback.; requires: Valid user credentials with approver role; Access to the list of pending actions submitted by contributors.; pre condition: User must be logged in and authenticated; User must have approver role; Actions must be submitted by contributors.; post condition: Approved actions are processed and implemented; Rejected actions are sent back to contributors with feedback.; side effects: Potential delays in content publication due to approval process; Increased workload on approvers during high activity periods}."
        },
        {
            "Sentence": "The system allows users to modify their accounts once created.",
            "ID": "2.3",
            "Expression": "modify their accounts once created",
            "Term": null,
            "Category": "system",
            "Requirement": "Functional Requirement{name: FR; id: 2.3; description: The system allows users to modify their accounts once created.; priority: 1; function: The system allows users to modify their accounts once created.; inputs: User modification data (updated password, email address, name); outputs: Confirmation messages for account modification; Error messages in case of failure.; source: Users initiating account modifications; destination: Mashbot's user account management system/database; action: Modify: Updates the user account with the new information provided; requires: Valid user credentials; User must be logged in.; pre condition: User must be authenticated; User must have an existing account.; post condition: User account information is updated in the system; Updated information is saved successfully.; side effects: Potential temporary unavailability of user account during the update process; Increased system load during peak modification times}."
        },
        {
            "Sentence": "The system requires that a user have logged in before modifications can be made.",
            "ID": "2.4",
            "Expression": "have logged in before modifications can be made",
            "Term": null,
            "Category": "system",
            "Requirement": "Functional Requirement{name: FR; id: 2.4; description: The system requires that a user have logged in before modifications can be made.; priority: 1; function: Ensure that users are authenticated before allowing any modifications to their accounts.; inputs: User login credentials (username and password).; outputs: Confirmation of successful login; Error messages for failed login attempts.; source: Users attempting to modify their accounts.; destination: User account management system.; action: Validate user credentials; Grant access to account modification features upon successful login.; requires: User login credentials must be correct and valid.; pre condition: User must not be logged in already; The system must be online and accessible.; post condition: User is logged in and can access account modification features; Failed login attempts are recorded.; side effects: Potential temporary unavailability of modification features during login process; Increased security through ensured authentication.}."
        },
        {
            "Sentence": "A campaign has the following components: Name, Pieces of content, Schedule, User/Group Permissions.",
            "ID": "3.1",
            "Expression": "has the following components: Name, Pieces of content, Schedule, User/Group Permissions.",
            "Term": null,
            "Category": "campaign",
            "Requirement": "Functional Requirement{name: FR; id: 3.1; description: A campaign has the following components: Name, Pieces of content, Schedule, User/Group Permissions.; priority: 1; function: Define the structure and components of a campaign within the system.; inputs: Campaign name; Pieces of content (text, images, videos, etc.); Schedule (timing for content publication); User/Group permissions.; outputs: A fully defined campaign ready for execution; source: Users creating or managing campaigns; destination: Mashbot campaign management system; action: Create and manage campaigns by specifying the necessary components; requires: Valid user credentials with appropriate permissions; pre condition: User must be logged in and authorized to create or manage campaigns; post condition: Campaign is saved and ready for scheduling and publishing; User/Group permissions are set for the campaign.; side effects: Potential for scheduling conflicts or permission issues if not configured correctly}."
        },
        {
            "Sentence": "A schedule is a mapping of times to publishing actions.",
            "ID": "3.2",
            "Expression": "is a mapping of times to publishing actions.",
            "Term": null,
            "Category": "schedule",
            "Requirement": "Functional Requirement{name: FR; id: 3.2; description: A schedule is a mapping of times to publishing actions. It may contain any actions a publisher can perform, and these actions are performed at the associated time.; priority: 1; function: Define a schedule that maps times to specific publishing actions.; inputs: Times for scheduling actions; Actions to be performed (e.g., publish, edit, delete content); outputs: Scheduled actions executed at specified times; source: Users who create or manage schedules; destination: Mashbot publishing system; action: Execute the mapped actions at the specified times; requires: Valid user credentials with publisher permissions; Properly configured actions and times; pre condition: User must be logged in and authorized to create or manage schedules; Actions to be scheduled must be defined; post condition: Actions are performed at the scheduled times; Schedule is updated and saved; side effects: Potential conflicts with overlapping schedules; Possible delays if the system is under heavy load}."
        },
        {
            "Sentence": "Mashbot will allow for the association of Mashbot accounts with external service accounts.",
            "ID": "4.1",
            "Expression": "allow for the association of Mashbot accounts with external service accounts.",
            "Term": null,
            "Category": "Mashbot",
            "Requirement": "Functional Requirement{name: FR; id: 4.1; description: Mashbot will allow for the association of Mashbot accounts with external service accounts.; priority: 1; function: Allow users to link their Mashbot accounts with external service accounts for seamless integration.; inputs: User credentials for external service accounts (e.g., API keys, OAuth tokens).; outputs: Confirmation message upon successful association; Error messages if the association fails.; source: Mashbot users initiating the association process.; destination: External service platforms (e.g., social media accounts, third-party services).; action: Authenticate and authorize Mashbot to access and manage external service accounts on behalf of the user.; requires: Valid Mashbot user credentials; Valid credentials for the external service account.; pre condition: The user must be logged into their Mashbot account; The external service account must be active and accessible.; post condition: The Mashbot account is successfully linked to the external service account; The user can now manage and interact with the external service through Mashbot.; side effects: Increased security considerations due to the integration of external services; Potential latency in actions due to reliance on external service APIs}."
        },
        {
            "Sentence": "Mashbot will provide an interface for authenticating a user account to an external service account.",
            "ID": "4.2",
            "Expression": "provide an interface for authenticating a user account to an external service account.",
            "Term": null,
            "Category": "Mashbot",
            "Requirement": "Functional Requirement{name: FR; id: 4.2; description: Mashbot will provide an interface for authenticating a user account to an external service account.; priority: 1; function: Provide a secure interface for users to authenticate their Mashbot account with an external service account.; inputs: User credentials for external service accounts (e.g., API keys, OAuth tokens).; outputs: Authentication success confirmation; Error messages if authentication fails.; source: Mashbot users initiating the authentication process.; destination: External service platforms (e.g., social media accounts, third-party services).; action: Authenticate user credentials with the external service and establish a secure connection.; requires: Valid Mashbot user credentials; Valid credentials for the external service account.; pre condition: The user must be logged into their Mashbot account; The external service account must be active and accessible.; post condition: The Mashbot account is successfully authenticated with the external service account; The user can now access and interact with the external service through Mashbot.; side effects: Potential security risks associated with storing and handling external service credentials; Possible delays in authentication due to external service response times}."
        },
        {
            "Sentence": "Mashbot will provide a standardized method of interacting with external service accounts.",
            "ID": "4.3",
            "Expression": "provide a standardized method of interacting with external service accounts.",
            "Term": null,
            "Category": "Mashbot",
            "Requirement": "Functional Requirement{name: FR; id: 4.3; description: Mashbot will provide a standardized method of interacting with external service accounts. ; priority: 1; function: Provide a unified and standardized interface for users to interact with various external service accounts.; inputs: API requests from users to interact with external service accounts (e.g., posting content, fetching data).; outputs: Responses from external service accounts (e.g., confirmation messages, fetched data).; source: Mashbot users initiating interactions with external services.; destination: External service platforms (e.g., social media accounts, third-party services).; action: Standardize and process user requests to interact with external services; Send API requests to external services and handle their responses.; requires: Valid user credentials; Properly authenticated and linked external service accounts.; pre condition: The user must be logged into their Mashbot account; The external service accounts must be authenticated and linked.; post condition: Successful interaction with external services (e.g., content posted, data retrieved); Standardized responses are provided to the user.; side effects: Potential delays due to external service response times; Possible rate limiting or restrictions imposed by external services}."
        },
        {
            "Sentence": "The system encrypts data over a direct connection between the web client and the server.",
            "ID": "5.1",
            "Expression": "encrypts data over a direct connection between the web client and the server.",
            "Term": null,
            "Category": "system",
            "Requirement": "Non-Functional Requirement{name: NFR; id: 5.1; description: The system encrypts data over a direct connection between the web client and the server.; priority: 1; types: security}."
        },
        {
            "Sentence": "The system allows for the backup of the data system to local or remote non-volatile storage systems.",
            "ID": "5.2",
            "Expression": "allows for the backup of the data system to local or remote non-volatile storage systems.",
            "Term": null,
            "Category": "system",
            "Requirement": "Non-Functional Requirement{name: NFR; id: 5.2; description: The system allows for the backup of the data system to local or remote non-volatile storage systems.; priority: 1; types: dependability, security}."
        },
        {
            "Sentence": "The system allows the System Administrator to configure a timeout after which a user is automatically logged out of Mashbot.",
            "ID": "5.4",
            "Expression": "configure a timeout after which a user is automatically logged out of Mashbot.",
            "Term": null,
            "Category": "System Administrator",
            "Requirement": "Non-Functional Requirement{name: NFR; id: 5.4; description: The system allows the System Administrator to configure a timeout after which a user is automatically logged out of Mashbot.; priority: 1; types: usability, security}."
        },
        {
            "Sentence": "The system uses the configured authentication module.",
            "ID": "5.3",
            "Expression": "uses the configured authentication module.",
            "Term": null,
            "Category": "system",
            "Requirement": "Non-Functional Requirement{name: NFR; id: 5.3; description: The system uses the configured authentication module. The authentication method is configurable by the System Administrator. ; priority: 1; types: security, operational}."
        },
        {
            "Sentence": "A user should be able to register a new account",
            "ID": "6.1",
            "Expression": "be able to register a new account",
            "Term": null,
            "Category": "user",
            "Requirement": "User Requirement{name: User Requirement, id: 6.1, description: A user should be able to register a new account, priority: 1}"
        },
        {
            "Sentence": "A user should be able to log in",
            "ID": "6.2",
            "Expression": "be able to log in",
            "Term": null,
            "Category": "user",
            "Requirement": "User Requirement{name: User Requirement, id: 6.2, description: A user should be able to log in, priority: 1}"
        },
        {
            "Sentence": "A member should be able to log out",
            "ID": "6.3",
            "Expression": "be able to log out",
            "Term": null,
            "Category": "member",
            "Requirement": "User Requirement{name: User Requirement, id: 6.3, description: A member should be able to log out, priority: 1}"
        },
        {
            "Sentence": "A member should have a profile",
            "ID": "6.4",
            "Expression": "have a profile",
            "Term": null,
            "Category": "member",
            "Requirement": "User Requirement{name: User Requirement, id: 6.4, description: A member should have a profile, priority: 1}"
        }
    ]
}